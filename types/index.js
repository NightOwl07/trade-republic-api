// @bun
import*as g from"readline";import*as n from"fs/promises";import*as l from"path";import*as d from"os";import{WebSocket as o}from"ws";class a{phoneNo;pin;static HOST="https://api.traderepublic.com";static WS_HOST="wss://api.traderepublic.com";static WS_CONNECT_VERSION="31";ws;processId;cookies=[];trSessionToken;trRefreshToken;subscriptions=[];echoInterval;subCount=1;cookieFilePath;constructor(e,t,s){this.phoneNo=e;this.pin=t;if(s)this.cookieFilePath=l.resolve(s);else this.cookieFilePath=l.join(d.homedir(),".tr_api_cookies.json")}async login(){try{if(console.info("Attempting to log in..."),await this.loadAndValidateSavedSession()){console.log("Successfully logged in using saved session. WebSocket setup completed.");return}console.info("Saved session invalid or not found. Performing full login...");let e=await this.performLogin();if(!e.processId)throw new Error("Login failed: no processId received");this.processId=e.processId;let t=await this.askQuestion("Please enter the PIN received on your phone: ");await this.verifyPin(t),await this.saveCookiesToFile(),await this.setupWebSocket(),console.log("Login successful and WebSocket setup completed")}catch(e){if(console.error("Login failed:",e),this.ws)this.ws.close(),this.ws=void 0;if(this.echoInterval)clearInterval(this.echoInterval),this.echoInterval=void 0}}async performLogin(){return await(await this.request("/api/v1/auth/web/login",{phoneNumber:this.phoneNo,pin:this.pin})).json()}async verifyPin(e){let t=await this.request(`/api/v1/auth/web/login/${this.processId}/${e}`);if(t.status!==200)throw new Error(`Verification failed with status: ${t.status}`);this.cookies=t.headers.getSetCookie();let s=this.extractCookie("tr_session",!0);if(!s)throw new Error("Critical: tr_session token not extracted after PIN verification.");this.trSessionToken=s,this.trRefreshToken=this.extractCookie("tr_refresh",!1)}async setupWebSocket(){if(this.ws&&this.ws.readyState===o.OPEN){console.info("WebSocket already connected.");return}if(this.ws)this.ws.removeAllListeners(),this.ws.terminate();return this.ws=new o(a.WS_HOST),this.ws.on("error",(e)=>{console.error("WebSocket error:",e)}),this.ws.on("close",()=>{if(console.info("WebSocket connection closed"),this.echoInterval)clearInterval(this.echoInterval),this.echoInterval=void 0}),new Promise((e,t)=>{this.ws.on("open",()=>{console.info("WebSocket connection opened.");let i={locale:"en"};if(this.ws.send(`connect ${a.WS_CONNECT_VERSION} ${JSON.stringify(i)}`),this.echoInterval)clearInterval(this.echoInterval);this.echoInterval=setInterval(this.echo.bind(this),30000),e()}),this.ws.on("message",(i)=>{this.handleWebSocketMessage(i.toString())});let s=setTimeout(()=>{if(t(new Error("WebSocket connection timed out")),this.ws)this.ws.terminate()},1e4);this.ws.on("open",()=>clearTimeout(s)),this.ws.on("error",(i)=>{clearTimeout(s),t(i)})})}async request(e,t=null,s="POST",i=!1){let r={"Content-Type":"application/json"};if(i&&this.cookies.length>0)r.Cookie=this.cookies.map((u)=>u.split(";")[0]).join("; ");let c={method:s,headers:r,body:s==="GET"||s==="DELETE"||!t?void 0:JSON.stringify(t)};return await fetch(`${a.HOST}${e}`,c)}async askQuestion(e){let t=g.createInterface({input:process.stdin,output:process.stdout});return new Promise((s)=>{t.question(e,(i)=>{t.close(),s(i)})})}extractCookie(e,t=!0){let s=this.cookies.find((i)=>i.startsWith(`${e}=`));if(!s){if(t)throw new Error(`Required cookie not found: ${e}`);return}return s.split(";")[0].split("=")[1]}subscribe(e,t){this.subscribeInternal(e,t,!1)}subscribeOnce(e,t){this.subscribeInternal(e,t,!0)}subscribeInternal(e,t,s){if(!this.ws||this.ws.readyState!==o.OPEN){console.error("WebSocket connection not established or not open. Cannot subscribe.");return}if(!this.trSessionToken){console.error("Session token is not available. Cannot subscribe.");return}this.ws.send(`sub ${this.subCount} ${JSON.stringify({token:this.trSessionToken,...e})}`),this.subscriptions.push({id:this.subCount,topic:e.type,callback:t,isOneTime:s}),this.subCount++}echo(){if(!this.ws||this.ws.readyState!==o.OPEN)return;try{this.ws.send(`echo ${Date.now()}`)}catch(e){console.error("Failed to send echo:",e)}}handleWebSocketMessage(e){let t=this.extractIdAndJson(e);if(!t)return;let s=t.id?Number(t.id):null;if(s===null)return;let i=this.subscriptions.findIndex((r)=>{if(r.id===s)return r.callback(t.jsonData),r.isOneTime;return!1});if(i!==-1)this.subscriptions.splice(i,1)}extractIdAndJson(e){let t=e.indexOf("{");if(t!==-1){let i=e.substring(0,t).trim().match(/\d+/),r=i?i[0]:null,c=e.substring(t).trim();return{id:r,jsonData:c}}else return{id:null,jsonData:null}}async saveCookiesToFile(){if(this.trSessionToken&&this.cookies.length>0){let e={trSessionToken:this.trSessionToken,trRefreshToken:this.trRefreshToken,rawCookies:this.cookies};try{await n.writeFile(this.cookieFilePath,JSON.stringify(e,null,2),"utf-8"),console.info("Session cookies saved to:",this.cookieFilePath)}catch(t){console.error("Error saving cookies to file:",t)}}else console.warn("No session token or raw cookies to save.")}async loadCookiesFromFile(){try{await n.access(this.cookieFilePath);let e=await n.readFile(this.cookieFilePath,"utf-8"),t=JSON.parse(e);if(t.trSessionToken&&Array.isArray(t.rawCookies))return t;return console.warn("Loaded cookie file is malformed."),await this.clearSavedCookiesAndState(),null}catch(e){if(e.code==="ENOENT");else console.warn("Error loading cookies from file:",e);return null}}async loadAndValidateSavedSession(){let e=await this.loadCookiesFromFile();if(!e||!e.trSessionToken)return!1;this.trSessionToken=e.trSessionToken,this.trRefreshToken=e.trRefreshToken,this.cookies=e.rawCookies,console.info("Loaded session from file. Validating session via API request...");try{let t=await this.request("/api/v1/auth/web/session",null,"GET",!0);if(t.ok)return console.info("Saved session is valid. Proceeding to set up WebSocket."),await this.setupWebSocket(),!0;else return console.warn(`Saved session validation failed (HTTP ${t.status}). Invalidating saved session.`),await this.clearSavedCookiesAndState(),!1}catch(t){return console.warn("Error during saved session validation or WebSocket setup:",t),await this.clearSavedCookiesAndState(),!1}}clearLocalState(){if(this.trSessionToken=void 0,this.trRefreshToken=void 0,this.cookies=[],this.processId=void 0,this.subscriptions=[],this.subCount=1,this.ws){if(this.ws.removeAllListeners(),this.ws.readyState===o.OPEN||this.ws.readyState===o.CONNECTING)this.ws.close();this.ws=void 0}if(this.echoInterval)clearInterval(this.echoInterval),this.echoInterval=void 0}async clearSavedCookiesAndState(){this.clearLocalState();try{await n.access(this.cookieFilePath),await n.unlink(this.cookieFilePath),console.info("Invalid/old saved cookie file deleted:",this.cookieFilePath)}catch(e){if(e.code==="ENOENT");else console.error("Error deleting saved cookie file:",e)}}async logout(){console.info("Logging out and clearing session..."),await this.clearSavedCookiesAndState(),console.info("Session cleared.")}}function f(e,t){return{type:e,...t}}export{f as createMessage,a as TradeRepublicApi};
